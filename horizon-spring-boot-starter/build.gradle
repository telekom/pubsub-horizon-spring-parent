// Copyright 2024 Deutsche Telekom IT GmbH
//
// SPDX-License-Identifier: Apache-2.0

import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
    id 'java-library'
    id 'org.springframework.boot' apply false
    id 'io.spring.dependency-management'
    id 'maven-publish'
    id 'jacoco'
    id 'signing'
}

group 'de.telekom.eni'

ext {
    isReleaseVersion = !version.endsWith("SNAPSHOT")
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
    withJavadocJar()
    withSourcesJar()
}

dependencyManagement {
    imports {
        mavenBom SpringBootPlugin.BOM_COORDINATES
    }
}

dependencies {
    implementation 'io.micrometer:micrometer-tracing-bridge-brave'
    implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // ENI
    api project(':horizon-core')
    api project(':horizon-spring-boot-autoconfigure')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            groupId 'de.telekom.eni'
            artifactId 'horizon-spring-boot-starter'
            version = project.properties['version']

            pom {
                name = 'Horizon spring parent starter'
                description = 'Spring-boot-starter for pubsub horizon java components.'
                url = 'https://github.com/telekom/pubsub-horizon-spring-parent'
                inceptionYear = '2022'

                licenses {
                    license {
                        name = 'Apache-2.0'
                        url = 'https://opensource.org/licenses/Apache-2.0'
                    }
                }
                developers {
                    developer {
                        id = 'eni-pandora'
                        name = 'Team Pandora'
                        email = 'dtit_eni_hub_team_pandora@telekom.de'
                        organization = 'Deutsche Telekom IT GmbH'
                        organizationUrl = 'https://developer.telekom.de/'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/telekom/pubsub-horizon-spring-parent.git'
                    developerConnection = 'scm:git:git://github.com/telekom/pubsub-horizon-spring-parent.git'
                    url = 'https://github.com/telekom/pubsub-horizon-spring-parent'
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = isReleaseVersion
                    ? "https://ossrh-staging-api.central.sonatype.com/service/local/staging/deploy/maven2/"
                    : "https://central.sonatype.com/repository/maven-snapshots/"
            credentials {
                username = System.getenv('PUBLISH_USERNAME')
                password = System.getenv('PUBLISH_PASSWORD')
            }
        }
    }

}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test

    reports {
        xml.required = true
        html.required = true
    }
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("publish") }
    def signingKey = new String(Base64.decoder.decode(System.getenv('PUBLISH_GPG_PRIVATE_KEY') ?: ""))
    def signingPassword = System.getenv('PUBLISH_GPG_PASSPHRASE')
    useInMemoryPgpKeys(signingKey, signingPassword)

    sign publishing.publications.mavenJava
}

task("printVersion") {
    doLast {
        println "Version: ${project.version}"
    }
}

publish {
    finalizedBy printVersion
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}